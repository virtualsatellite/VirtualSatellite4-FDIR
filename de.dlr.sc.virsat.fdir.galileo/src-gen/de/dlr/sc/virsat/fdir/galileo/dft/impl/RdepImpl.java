/**
 * generated by Xtext 2.18.0.M3
 */
package de.dlr.sc.virsat.fdir.galileo.dft.impl;

import de.dlr.sc.virsat.fdir.galileo.dft.DftPackage;
import de.dlr.sc.virsat.fdir.galileo.dft.Rdep;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rdep</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.dlr.sc.virsat.fdir.galileo.dft.impl.RdepImpl#getRateFactor <em>Rate Factor</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RdepImpl extends GalileoNodeTypeImpl implements Rdep
{
  /**
   * The default value of the '{@link #getRateFactor() <em>Rate Factor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRateFactor()
   * @generated
   * @ordered
   */
  protected static final String RATE_FACTOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRateFactor() <em>Rate Factor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRateFactor()
   * @generated
   * @ordered
   */
  protected String rateFactor = RATE_FACTOR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RdepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DftPackage.Literals.RDEP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRateFactor()
  {
    return rateFactor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRateFactor(String newRateFactor)
  {
    String oldRateFactor = rateFactor;
    rateFactor = newRateFactor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DftPackage.RDEP__RATE_FACTOR, oldRateFactor, rateFactor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DftPackage.RDEP__RATE_FACTOR:
        return getRateFactor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DftPackage.RDEP__RATE_FACTOR:
        setRateFactor((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DftPackage.RDEP__RATE_FACTOR:
        setRateFactor(RATE_FACTOR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DftPackage.RDEP__RATE_FACTOR:
        return RATE_FACTOR_EDEFAULT == null ? rateFactor != null : !RATE_FACTOR_EDEFAULT.equals(rateFactor);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (rateFactor: ");
    result.append(rateFactor);
    result.append(')');
    return result.toString();
  }

} //RdepImpl
