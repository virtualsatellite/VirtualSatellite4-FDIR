/**
 * generated by Xtext 2.12.0
 */
package de.dlr.sc.virsat.fdir.galileo.dft.impl;

import de.dlr.sc.virsat.fdir.galileo.dft.DftFactory;
import de.dlr.sc.virsat.fdir.galileo.dft.DftPackage;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoDft;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoFaultTreeNode;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoNodeType;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DftPackageImpl extends EPackageImpl implements DftPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoDftEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoFaultTreeNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoNodeTypeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.dlr.sc.virsat.fdir.galileo.dft.DftPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DftPackageImpl()
  {
    super(eNS_URI, DftFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DftPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DftPackage init()
  {
    if (isInited) return (DftPackage)EPackage.Registry.INSTANCE.getEPackage(DftPackage.eNS_URI);

    // Obtain or create and register package
    DftPackageImpl theDftPackage = (DftPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DftPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DftPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theDftPackage.createPackageContents();

    // Initialize created meta-data
    theDftPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDftPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DftPackage.eNS_URI, theDftPackage);
    return theDftPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGalileoDft()
  {
    return galileoDftEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGalileoDft_Root()
  {
    return (EReference)galileoDftEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGalileoDft_Gates()
  {
    return (EReference)galileoDftEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGalileoDft_BasicEvents()
  {
    return (EReference)galileoDftEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGalileoFaultTreeNode()
  {
    return galileoFaultTreeNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoFaultTreeNode_Name()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGalileoFaultTreeNode_Type()
  {
    return (EReference)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGalileoFaultTreeNode_Children()
  {
    return (EReference)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoFaultTreeNode_Lambda()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoFaultTreeNode_Dorm()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoFaultTreeNode_Repair()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGalileoNodeType()
  {
    return galileoNodeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoNodeType_TypeName()
  {
    return (EAttribute)galileoNodeTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGalileoNodeType_Observables()
  {
    return (EReference)galileoNodeTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoNodeType_ObservationRate()
  {
    return (EAttribute)galileoNodeTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoNodeType_RateFactor()
  {
    return (EAttribute)galileoNodeTypeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGalileoNodeType_Time()
  {
    return (EAttribute)galileoNodeTypeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DftFactory getDftFactory()
  {
    return (DftFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    galileoDftEClass = createEClass(GALILEO_DFT);
    createEReference(galileoDftEClass, GALILEO_DFT__ROOT);
    createEReference(galileoDftEClass, GALILEO_DFT__GATES);
    createEReference(galileoDftEClass, GALILEO_DFT__BASIC_EVENTS);

    galileoFaultTreeNodeEClass = createEClass(GALILEO_FAULT_TREE_NODE);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__NAME);
    createEReference(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__TYPE);
    createEReference(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__CHILDREN);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__LAMBDA);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__DORM);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__REPAIR);

    galileoNodeTypeEClass = createEClass(GALILEO_NODE_TYPE);
    createEAttribute(galileoNodeTypeEClass, GALILEO_NODE_TYPE__TYPE_NAME);
    createEReference(galileoNodeTypeEClass, GALILEO_NODE_TYPE__OBSERVABLES);
    createEAttribute(galileoNodeTypeEClass, GALILEO_NODE_TYPE__OBSERVATION_RATE);
    createEAttribute(galileoNodeTypeEClass, GALILEO_NODE_TYPE__RATE_FACTOR);
    createEAttribute(galileoNodeTypeEClass, GALILEO_NODE_TYPE__TIME);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(galileoDftEClass, GalileoDft.class, "GalileoDft", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGalileoDft_Root(), this.getGalileoFaultTreeNode(), null, "root", null, 0, 1, GalileoDft.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoDft_Gates(), this.getGalileoFaultTreeNode(), null, "gates", null, 0, -1, GalileoDft.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoDft_BasicEvents(), this.getGalileoFaultTreeNode(), null, "basicEvents", null, 0, -1, GalileoDft.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(galileoFaultTreeNodeEClass, GalileoFaultTreeNode.class, "GalileoFaultTreeNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGalileoFaultTreeNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoFaultTreeNode_Type(), this.getGalileoNodeType(), null, "type", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoFaultTreeNode_Children(), this.getGalileoFaultTreeNode(), null, "children", null, 0, -1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoFaultTreeNode_Lambda(), ecorePackage.getEString(), "lambda", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoFaultTreeNode_Dorm(), ecorePackage.getEString(), "dorm", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoFaultTreeNode_Repair(), ecorePackage.getEString(), "repair", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(galileoNodeTypeEClass, GalileoNodeType.class, "GalileoNodeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGalileoNodeType_TypeName(), ecorePackage.getEString(), "typeName", null, 0, 1, GalileoNodeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoNodeType_Observables(), this.getGalileoFaultTreeNode(), null, "observables", null, 0, -1, GalileoNodeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoNodeType_ObservationRate(), ecorePackage.getEString(), "observationRate", null, 0, 1, GalileoNodeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoNodeType_RateFactor(), ecorePackage.getEString(), "rateFactor", null, 0, 1, GalileoNodeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoNodeType_Time(), ecorePackage.getEString(), "time", null, 0, 1, GalileoNodeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DftPackageImpl
