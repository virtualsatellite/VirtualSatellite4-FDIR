/**
 * generated by Xtext 2.18.0.M3
 */
package de.dlr.sc.virsat.fdir.galileo.dft.impl;

import de.dlr.sc.virsat.fdir.galileo.dft.DftFactory;
import de.dlr.sc.virsat.fdir.galileo.dft.DftPackage;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoDft;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoFaultTreeNode;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoNodeType;
import de.dlr.sc.virsat.fdir.galileo.dft.GalileoRepairAction;
import de.dlr.sc.virsat.fdir.galileo.dft.Named;
import de.dlr.sc.virsat.fdir.galileo.dft.Observer;
import de.dlr.sc.virsat.fdir.galileo.dft.Parametrized;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DftPackageImpl extends EPackageImpl implements DftPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoDftEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoFaultTreeNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoRepairActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass galileoNodeTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass observerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parametrizedEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.dlr.sc.virsat.fdir.galileo.dft.DftPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DftPackageImpl()
  {
    super(eNS_URI, DftFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link DftPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DftPackage init()
  {
    if (isInited) return (DftPackage)EPackage.Registry.INSTANCE.getEPackage(DftPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredDftPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    DftPackageImpl theDftPackage = registeredDftPackage instanceof DftPackageImpl ? (DftPackageImpl)registeredDftPackage : new DftPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDftPackage.createPackageContents();

    // Initialize created meta-data
    theDftPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDftPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DftPackage.eNS_URI, theDftPackage);
    return theDftPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGalileoDft()
  {
    return galileoDftEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoDft_Root()
  {
    return (EReference)galileoDftEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoDft_Gates()
  {
    return (EReference)galileoDftEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoDft_BasicEvents()
  {
    return (EReference)galileoDftEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGalileoFaultTreeNode()
  {
    return galileoFaultTreeNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGalileoFaultTreeNode_Name()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoFaultTreeNode_Type()
  {
    return (EReference)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoFaultTreeNode_Children()
  {
    return (EReference)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGalileoFaultTreeNode_Lambda()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGalileoFaultTreeNode_Prob()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGalileoFaultTreeNode_Dorm()
  {
    return (EAttribute)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoFaultTreeNode_RepairActions()
  {
    return (EReference)galileoFaultTreeNodeEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGalileoRepairAction()
  {
    return galileoRepairActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGalileoRepairAction_Repair()
  {
    return (EAttribute)galileoRepairActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGalileoRepairAction_Name()
  {
    return (EAttribute)galileoRepairActionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGalileoRepairAction_Observartions()
  {
    return (EReference)galileoRepairActionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGalileoNodeType()
  {
    return galileoNodeTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamed()
  {
    return namedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNamed_TypeName()
  {
    return (EAttribute)namedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObserver()
  {
    return observerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObserver_Observables()
  {
    return (EReference)observerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getObserver_ObservationRate()
  {
    return (EAttribute)observerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParametrized()
  {
    return parametrizedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParametrized_TypeName()
  {
    return (EAttribute)parametrizedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParametrized_Parameter()
  {
    return (EAttribute)parametrizedEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DftFactory getDftFactory()
  {
    return (DftFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    galileoDftEClass = createEClass(GALILEO_DFT);
    createEReference(galileoDftEClass, GALILEO_DFT__ROOT);
    createEReference(galileoDftEClass, GALILEO_DFT__GATES);
    createEReference(galileoDftEClass, GALILEO_DFT__BASIC_EVENTS);

    galileoFaultTreeNodeEClass = createEClass(GALILEO_FAULT_TREE_NODE);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__NAME);
    createEReference(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__TYPE);
    createEReference(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__CHILDREN);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__LAMBDA);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__PROB);
    createEAttribute(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__DORM);
    createEReference(galileoFaultTreeNodeEClass, GALILEO_FAULT_TREE_NODE__REPAIR_ACTIONS);

    galileoRepairActionEClass = createEClass(GALILEO_REPAIR_ACTION);
    createEAttribute(galileoRepairActionEClass, GALILEO_REPAIR_ACTION__REPAIR);
    createEAttribute(galileoRepairActionEClass, GALILEO_REPAIR_ACTION__NAME);
    createEReference(galileoRepairActionEClass, GALILEO_REPAIR_ACTION__OBSERVARTIONS);

    galileoNodeTypeEClass = createEClass(GALILEO_NODE_TYPE);

    namedEClass = createEClass(NAMED);
    createEAttribute(namedEClass, NAMED__TYPE_NAME);

    observerEClass = createEClass(OBSERVER);
    createEReference(observerEClass, OBSERVER__OBSERVABLES);
    createEAttribute(observerEClass, OBSERVER__OBSERVATION_RATE);

    parametrizedEClass = createEClass(PARAMETRIZED);
    createEAttribute(parametrizedEClass, PARAMETRIZED__TYPE_NAME);
    createEAttribute(parametrizedEClass, PARAMETRIZED__PARAMETER);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    namedEClass.getESuperTypes().add(this.getGalileoNodeType());
    observerEClass.getESuperTypes().add(this.getGalileoNodeType());
    parametrizedEClass.getESuperTypes().add(this.getGalileoNodeType());

    // Initialize classes and features; add operations and parameters
    initEClass(galileoDftEClass, GalileoDft.class, "GalileoDft", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGalileoDft_Root(), this.getGalileoFaultTreeNode(), null, "root", null, 0, 1, GalileoDft.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoDft_Gates(), this.getGalileoFaultTreeNode(), null, "gates", null, 0, -1, GalileoDft.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoDft_BasicEvents(), this.getGalileoFaultTreeNode(), null, "basicEvents", null, 0, -1, GalileoDft.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(galileoFaultTreeNodeEClass, GalileoFaultTreeNode.class, "GalileoFaultTreeNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGalileoFaultTreeNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoFaultTreeNode_Type(), this.getGalileoNodeType(), null, "type", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoFaultTreeNode_Children(), this.getGalileoFaultTreeNode(), null, "children", null, 0, -1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoFaultTreeNode_Lambda(), ecorePackage.getEString(), "lambda", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoFaultTreeNode_Prob(), ecorePackage.getEString(), "prob", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoFaultTreeNode_Dorm(), ecorePackage.getEString(), "dorm", null, 0, 1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoFaultTreeNode_RepairActions(), this.getGalileoRepairAction(), null, "repairActions", null, 0, -1, GalileoFaultTreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(galileoRepairActionEClass, GalileoRepairAction.class, "GalileoRepairAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGalileoRepairAction_Repair(), ecorePackage.getEString(), "repair", null, 0, 1, GalileoRepairAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGalileoRepairAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, GalileoRepairAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGalileoRepairAction_Observartions(), this.getGalileoFaultTreeNode(), null, "observartions", null, 0, -1, GalileoRepairAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(galileoNodeTypeEClass, GalileoNodeType.class, "GalileoNodeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(namedEClass, Named.class, "Named", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNamed_TypeName(), ecorePackage.getEString(), "typeName", null, 0, 1, Named.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(observerEClass, Observer.class, "Observer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObserver_Observables(), this.getGalileoFaultTreeNode(), null, "observables", null, 0, -1, Observer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getObserver_ObservationRate(), ecorePackage.getEString(), "observationRate", null, 0, 1, Observer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parametrizedEClass, Parametrized.class, "Parametrized", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParametrized_TypeName(), ecorePackage.getEString(), "typeName", null, 0, 1, Parametrized.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParametrized_Parameter(), ecorePackage.getEString(), "parameter", null, 0, 1, Parametrized.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DftPackageImpl
