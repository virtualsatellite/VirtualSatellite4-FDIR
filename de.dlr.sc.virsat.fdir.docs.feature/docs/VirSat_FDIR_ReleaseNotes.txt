VirSat FDIR Release Notes
-------------------------

VirSat FDIR is based on VirSat Core. Please don't forget to read the Release Notes of VirSat Core as well!

Release 4.15.0 (28th July 2022)
----------------------------------

New Features:
	Improved partial observability semantics - #434 Feature
	Migrated to Java 11 - #450 Feature
	Migrated to Eclipse 2022-03 - #455 Feature
	Expanded FDIR manual - #456 Documentation
	Upgraded to BIRT 4.19 - #459 Feature
	Added requirements verification methods to Analysis categories - #449 Feature
	
Fixed Bug:
	Fixed error when opening a diagram when a Fault is a composed property - #443 Bug

Release 4.13.0 (29th April 2021)
----------------------------------

New Features:
	Symmetry reduction for non-deterministic Fault Trees - #402 Feature

Fixed Bug:
	Basic event failure rate does not updated - #417 Bug

Release 4.12.1 (9th October 2020)
----------------------------------

New Features:
	Created benchmark experiment using FFORT - #396 Feature
	Delivering Requirements concept from CORE - #400 Feature
	Added Detectability Analysis section to FDIR Report template - #409 Feature
	Added Availability Analysis section to FDIR Report template - #408 Feature

Fixed Bug:
	Fixed broken sections in Reporting template - #403 Bug

Release 4.12.0 (31st July 2020)
----------------------------------

New Features:
	Added repair semantics for non-deterministic fault trees - #190 Feature
	Added repair semantics for recovery automaton minimization - #235 Feature
	Added support for minimizing recovery automata defined on partial observable fault trees - #245 Feature
	Added app for generating fault trees out of product trees of FDIR services - #222 Feature 
	Added timeout transition for recovery automata - #278 #280 Feature
	Implemented support for UNIFORM distribution type in basic events - #242 Feature
	Implemented semantics for partial observable fault trees with repair - #268 Feature
	Implemented support for observation dependent repair rates - #304 Feature
	Implemented support to apply best-fit synthesis algorithm to a fault tree module - #312 #361 Feature 
	Added direct editing support for all numeric values in the diagram editor - #333 Feature
	Implemented support for turning comments into sticky notes - #337 #370 #383 Feature
	Added category for configuring synthesis configuration - #339 #341 Feature
	Implemented SEQ gate - #362 Feature
	Upgraded to BIRT 4.16.0 - #372 Feature

Usability Updates:
	Restricted FDIRParameters to be only allowed to be added at the root level of a tree - #230 Comfort/usability
	Added user manual - #221 #246 #263 #277 #289 #291 #293 #314 #316 Documentation
	Implemented ability to directly connect ports of fault tree nodes without activating the edge tool - #283 #317 Comfort/usability
	Improved highlighting of selected object in fault tree diagram editor - #318 Comfort/usability
	Added compartments and sorted entries in the fault tree diagram editor - #319 Comfort/usability
	Increased border margin for auto-layouting fault tree nodes in the diagram editor - #320 Comfort/usability
	Double clicking on a fault tree node in the diagram editor now opens the corresponding editor - #338 Comfort/usability

Fixed Bug:
	Fixed numerical stability issues in SteadyStateAvailability calculcations - #58 Bug
	Fixed bug where too many entries were generated for FMECA tables - #160 Bug
	Fixed issue where deleting a sub node in a fault tree could lead to an NPE - #228 Bug

Release 4.10.0 (13th December 2019)
----------------------------------

New Features:
	Improved runtime of Recovery Automaton synthesis - #7 #8 #9 #21 #64 Feature
	Improved runtime of DFT evaluation - #53 #88 #90 #93 Feature Bug
	Implemented support for Partial Observable Fault Trees - #24 #28 #32 Feature
	Extended Recovery Automaton Model with Timed Transitions - #12 Feature
	Extended Fault Tree model with a DELAY gate - #15 Feature
	Extended Fault Tree model with a MONITOR gate - #13 Feature
	Extended configuration data model with a probability, observability, and criticality model - #20 #122 Feature
	Extended analysis model with an Observability Analysis - #29 Feature
	Implemented FDIR report generation mechanism - #61 #151 Feature
	Implemented support for using STORM as a backend for Recovery Automaton synthesis - #96 Feature
	Extended enums (Severity, ProbabiliyLevel, etc.) to support the UNKNOWN value - #116 Feature
	Migrated to Eclipse 2019-06 - #142 Feature Build
	Migrated to DVLM v7 - #197 Feature Build

Usability Updates:
	Recovery Automaton Minimizer can now be called from the UI - #18 UI
	Improved Look & Feel of analysis' with charts - #19 #60 #157 Comfort/Usability UI
	Restructured generated FMECA - #42 #132 Comfort/Usability UI
	Restructured generated MCSA - #101 #111 #132 Comfort/Usability Feature
	Implemented support for progress monitors in long running analysis methods - #59 Comfort/Usability 
	Coloring criticality values in analysis' according to criticality model - #124 UI
	Implemented support for setting names of gates in the Fault Tree diagrams - #130 UI
	Implemented validation checking for broken fault tree edges - #195 Comfort/Usability
	Modified data model to initialize failure rates with undefined value - #200 Comfort/Usability

Fixed Bug:
	Fixed an issue where Recovery Automaton Diagrams did not request for updates after state space changes - #56 Bug
	Fixed a performance issue when hovering over Fault Tree nodes in a Fault Tree diagram - #57 Bug
	Improved numerical stability of reliability and availability metric computations - #156 Bug
	Fixed a bug where common cause failures in the Fault Tree diagram were not expanded correctly - #164 Bug
	Fixed Galileo DFT export not being able to deal with not-unique full qualified names by switching to UUIDs - #169 Bug
	Fixed issue of Galileo DFT exporter not having an icon - #202 Bug UI 

Release 4.9.0 (2nd July 2019)
----------------------------------

New Features:
	Initial Open Source Release - #3 Release

Usability Updates:
	
Fixed Bug:

